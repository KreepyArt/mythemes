
#######################
# config starts here: #
#######################

# Font for window titles.
font JetBrainsMonoNL: JetBrainsMonoNL Nerd Font Medium 14

# set the mod key to the winkey:
set $mod Mod4

#####################
# workspace layout: #
#####################

# default i3 tiling mode:
workspace_layout default

##############################
# extra options for windows: #
##############################

#border indicator on windows:
new_window pixel 1

# thin borders
 hide_edge_borders both

# Set inner/outer gaps
gaps inner 9
gaps outer 5

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# switch to workspace
bindsym $mod+1    workspace  $ws1
bindsym $mod+2    workspace  $ws2
bindsym $mod+3    workspace  $ws3
bindsym $mod+4    workspace  $ws4
bindsym $mod+5    workspace  $ws5
bindsym $mod+6    workspace  $ws6
bindsym $mod+7    workspace  $ws7
bindsym $mod+8    workspace  $ws8
bindsym $mod+9    workspace  $ws9
bindsym $mod+0    workspace  $ws10

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10

######################################
# keybindings for different actions: #
######################################

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+q kill

# exit-menu
bindsym $mod+Shift+e exec ~/.config/i3/scripts/powermenu

# Lock the system
bindsym $mod+l exec ~/.config/i3/scripts/blur-lock

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace
bindsym $mod+Shift+r restart

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+b focus up
bindsym $mod+o focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+b move up
bindsym $mod+Shift+o move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+g layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace

# Multimedia Keys

# volume
bindsym $mod+Shift+x exec amixer -D pulse sset Master 5%+
bindsym $mod+Shift+z exec amixer -D pulse sset Master 5%-

# gradular volume control
bindsym $mod+x exec amixer -D pulse sset Master 1%+
bindsym $mod+z exec amixer -D pulse sset Master 1%-

# Power Profiles menu switcher (rofi)
bindsym $mod+Shift+p exec ~/.config/i3/scripts/power-profiles

##########################################
# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces
# Nerd fonts are used for glyphs
set $ws1 ""
set $ws2 ""
set $ws3 ""
set $ws4 "ﭮ"
set $ws5 ""
set $ws6 ""
set $ws7 ""
set $ws8 ""
set $ws9 ""
set $ws10 ""

# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
#workspace $ws1 output VGA-0
#workspace $ws2 output VGA-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0

# bind program to workspace and focus to them on startup:
assign [class="kitty"] $ws1
assign [class="(?i)firefox"] $ws2
assign [class="Thunar"] $ws3
assign [class="com.discordapp.Discord"] $ws4
assign [class="com.valvesoftware.Steam"] $ws5

# automatic set focus new window if it opens on another workspace then the current:
for_window [class=kitty] focus
for_window [class=(?i)firefox] focus
for_window [class=Thunar] focus
for_window [class=com.discordapp.Discord] focus
for_window [class=com.valvesoftware.Steam] focus

##############
# compositor #
##############

# A customized config for Picom is used for compositing
 exec_always --no-startup-id picom --config  ~/.config/example.picom.conf

#############################################
# autostart applications/services on login: #
#############################################

# get auth work with polkit
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 

# start a script to setup displays
# uncomment the next line, use arandr to setup displays and save the file as monitor:
 exec --no-startup-id ~/.screenlayout/monitor.sh

# set wallpaper
 exec --no-startup-id sleep 2 && nitrogen --restore

# set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

# Desktop notifications
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc

###############
# system tray #
###############

# if Dex isn't used, applets can be started here:

##################
# floating rules #
##################

# set floating for apps
for_window [class="Yad" instance="yad"] floating enable

# set floating for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [window_role="About"] floating enable

# set border of floating window
for_window [class="urxvt"] border pixel 1

######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		#ffffff
set $black		#000000
set $grey		#b0b5bd
set $pink		#ff96d6

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.focused		    	$lightblue	$darkblue	$white		$pink   	$pink
client.unfocused	    	$darkblue	$darkblue	$grey		$pink   	$pink
client.focused_inactive		$darkblue	$darkblue	$grey		$black		$pink
client.urgent		    	$urgentred	$urgentred	$white		$urgentred	$pink

#####################################
# Application menu handled by rofi: #
#####################################

## rofi bindings fancy application menu ($mod+d)

bindsym $mod+d exec rofi -modi drun -show drun \
		-config ~/.config/rofi/config.rasi

## rofi bindings for window menu ($mod+t)

bindsym $mod+t exec rofi -show window \
		-config ~/.config/rofi/rofidmenu.rasi

###################
# Polybar Launch: #
###################

# Polybar settings are handled by ~/.config/polybar/config.ini

exec_always --no-startup-id $HOME/.config/polybar/launch.sh
